// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  email     String   @unique
  password  String
  name      String
  avatar    String @db.MediumText
  isEditor   Boolean  @default(false)
  isAdmin    Boolean  @default(false)
  muteSpeach Boolean @default(false)
  nativeLanguage String  @db.VarChar(2) @default("ru")
  // 0 - from native to target, 1 - from target to native, 2 - both
  learningMode Int     @db.UnsignedInt @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  words     WordProgress[]
  topics    TopicProgress[]
  studySessions StudySession[]
}

model Word {
  id          Int      @id @default(autoincrement()) @db.UnsignedInt
  word        String  @db.VarChar(255)
  translation String  @db.VarChar(255)
  topic_id    Int     @db.UnsignedInt
  images      Images[]
  progress    WordProgress[]
  topic       Topic   @relation(fields: [topic_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "Word_topic_id_fkey")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  @@index([topic_id], map: "topic_id")
  // unique index for word,  topic and language pair
  @@unique([word, topic_id] , map: "word_topic_id")
}

model Topic {
  id     Int      @id @default(autoincrement()) @db.UnsignedInt
  name   String @db.VarChar(255)
  difficulty Int     @db.UnsignedInt @default(0)
  languageSource    String  @db.VarChar(2) @default("tr")
  languageTarget    String  @db.VarChar(2) @default("ru")
  words  Word[]
  progress TopicProgress[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, languageSource, languageTarget], map: "name_languageSource_languageTarget")
}

model WordProgress {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  user_id   Int     @db.UnsignedInt
  word_id   Int     @db.UnsignedInt
  level  Int     @db.UnsignedInt @default(0) // level of knowledge for the word
  isReversed Boolean @default(false) // is the word reversed in the study session
  nextReview DateTime? // next review date
  correct     Int     @db.UnsignedInt @default(0) // number of correct answers
  wrong       Int     @db.UnsignedInt @default(0) // number of wrong answers
  views      Int     @db.UnsignedInt @default(0) // number of times the word was shown
  user      User    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "UserProgress_user_id_fkey")
  word      Word    @relation(fields: [word_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "UserProgress_word_id_fkey")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([user_id], map: "user_id")
  @@index([word_id], map: "word_id")
  @@unique([user_id, word_id, isReversed], map: "user_id_word_id_isReversed")
}

model TopicProgress {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  user_id   Int     @db.UnsignedInt
  topic_id  Int     @db.UnsignedInt
  completed Boolean @default(false)
  started  Boolean @default(false)
  user      User    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "TopicProgress_user_id_fkey")
  topic     Topic   @relation(fields: [topic_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "TopicProgress_topic_id_fkey")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([user_id], map: "user_id")
  @@index([topic_id], map: "topic_id")
  @@unique([user_id, topic_id], map: "user_id_topic_id")
}

// keep stats about user study sessions per day
model StudySession {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  user_id   Int     @db.UnsignedInt
  date      DateTime @db.Date() // date of the study session
  correct  Int    @db.UnsignedInt @default(0) // number of correct answers
  wrong     Int     @db.UnsignedInt @default(0) // number of wrong answers
  known     Int     @db.UnsignedInt @default(0) // level >= 5
  wellKnown Int     @db.UnsignedInt @default(0) // level >= 8
  shown     Int     @db.UnsignedInt @default(0) // number of words shown
  language String  @db.VarChar(2) @default("tr") // language to learn
  ratio    Int    @db.UnsignedInt @default(0) // correct / shown
  user      User    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "StudySession_user_id_fkey")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([user_id], map: "user_id")
  @@unique([user_id, date, language], map: "user_id_date_language")
}

model Images {
  id       Int      @id @default(autoincrement()) @db.UnsignedInt
  word_id  Int     @db.UnsignedInt
  link     String  @db.VarChar(500)
  isSelected Boolean @default(false)
  word     Word?    @relation(fields: [word_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "Images_word_id_fkey")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([word_id], map: "word_id")
}